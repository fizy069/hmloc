:NewParser


class Foo(x)
//│ Defined class Foo
//│ Foo: 'x -> (Foo with {x: 'x})

let f = Foo(1)
//│ f: Foo & {x: int}

let f = new Foo(1)
//│ f: Foo & {x: int}

if f is Foo(a) then a else 0
//│ res: int

// case f of
//   { Foo ->
//     let a = f.x
//     a
//   | _ -> 0
//   }

// Foo(A) =:= Foo & { x: A }


fun test(x) = if x is Foo(a) then a
//│ test: (Foo with {x: 'x}) -> 'x

test(f)
//│ res: int

class Point(x, y)
//│ Defined class Point
//│ Point: ('x, 'y,) -> (Point with {x: 'x, y: 'y})

let origin = new Point(0, 0)
//│ origin: Point & {x: int, y: int}
