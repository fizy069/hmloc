:unifyDbg
let temp = if true then 0 else "oops" in 0
//│ [ERROR 1] String != Int unifying because [[[String]]] | [[[Int]]] <: α22'
//│ allVarPols: 
//│ norm[+] [[[String]]]
//│ | DNF: DNF(string<>{})
//│ ~> string<>
//│ allVarPols: 
//│ norm[+] [[[Int]]]
//│ | DNF: DNF(int<>{})
//│ ~> int<>
//│ ╔══[WARNING] [UNIFICATION ERROR 1] string and int cannot be unified but flows into the same location
//│ ╟── String is here
//│ ║  l.2: 	let temp = if true then 0 else "oops" in 0
//│ ║       	                               ^^^^^^
//│ ╟── Int is here
//│ ║  l.2: 	let temp = if true then 0 else "oops" in 0
//│ ║       	                        ^
//│ ╙── The following tvars cannot be resolved α22'
//│ unified α22'
//│  [Int] = α22' are arg type in ([Int] -> α24') = (α22' -> (α22' -> α22'))
//│  α22' :> [[[Int]]]
//│  α22' :> [[[String]]]
//│  α22' <: [[α25']]
//│ unified α23'
//│  α23' :> [[(α22' -> (α22' -> α22'))]]
//│  α23' <: [([Int] -> α24')]
//│ unified α24'
//│  α24' <: [([String] -> α25')]
//│  α24' = (α22' -> α22') are result type in ([Int] -> α24') = (α22' -> (α22' -> α22'))
//│ unified α25'
//│  [[α25']] = [[[Int]]] because α22' <: [[α25']] and α22' :> [[[Int]]]
//│  [[α25']] = [[[String]]] because α22' <: [[α25']] and α22' :> [[[String]]]
//│ res: int

:unifyDbg
def s x = if x then x else 3
//│ [ERROR 2] Bool != Int unifying because [[[[[Bool]]]]] = [[[Int]]] because [[[[α27']]]] & [[[[[Bool]]]]] :> α26' and α27' :> [[[Int]]]
//│ allVarPols: 
//│ norm[+] [[[[[Bool]]]]]
//│ | DNF: DNF(bool<>{})
//│ ~> bool<>
//│ allVarPols: 
//│ norm[+] [[[Int]]]
//│ | DNF: DNF(int<>{})
//│ ~> int<>
//│ ╔══[WARNING] [UNIFICATION ERROR 2] bool and int cannot be unified but flows into the same location
//│ ╟── Bool is here
//│ ║  l.37: 	def s x = if x then x else 3
//│ ║        	             ^
//│ ╟── Int is here
//│ ║  l.37: 	def s x = if x then x else 3
//│ ║        	                           ^
//│ ╟── The following tvars cannot be resolved α26', [[[[α27']]]]
//│ ╟── α27' is here
//│ ║  l.37: 	def s x = if x then x else 3
//│ ╙──      	                    ^
//│ unified α26'
//│  α26' <: [[[[[Bool]]]]]
//│  α26' <: [[[[α27']]]]
//│ unified α27'
//│  α27' :> [[[Int]]]
//│  α27' <: [[α30']]
//│  [[[[α27']]]] & [[[[[Bool]]]]] :> α26'
//│ unified α28'
//│  α28' :> [[(α27' -> (α27' -> α27'))]]
//│  α28' <: [([[α26']] -> α29')]
//│ unified α29'
//│  α29' <: [([Int] -> α30')]
//│  α29' = (α27' -> α27') are result type in ([[α26']] -> α29') = (α27' -> (α27' -> α27'))
//│ unified α30'
//│  [[α30']] = [[[Int]]] because α27' <: [[α30']] and α27' :> [[[Int]]]
//│  [[[[[Bool]]]]] = [[α30']] because [[[[α27']]]] & [[[[[Bool]]]]] :> α26' and α27' <: [[α30']]
//│ s: (bool & 'a) -> (int | 'a)

:unifyDbg
rec def clone x n =
  let rec helper acc n' =
    if acc <= 0 then acc else helper (acc + 1) (n' - 1) in
  helper x (n - 1)
//│ unified clone36'
//│  clone36' :> [((α37',) -> ((α38',) -> α66'))]
//│ unified α37'
//│  [α37'] = α60' are arg type in ([([α37'],)] -> α63') = ([(α60',)] -> α61')
//│  α37' <: [[[[[[α55']]]]]]
//│ unified α38'
//│  α38' <: [[[[[[Int]]]]]]
//│ unified helper39''
//│  helper39'' :> [((α40'',) -> ((α41'',) -> α53''))]
//│  helper39'' <: [([(α48'',)] -> α49'')]
//│ unified α40''
//│  α40'' <: [[[[α42'']]]]
//│  α40'' <: [[[[[[Int]]]]]]
//│ unified α41''
//│  Int = [[[[α41'']]]] because α51'' = Int are result type in ([(Int,)] -> α51'') = ((Int,) -> Int) and α51'' <: [[[[α41'']]]]
//│  α41'' = α51'' are arg type in ((α41'',) -> α53'') = ([(α51'',)] -> α52'')
//│  α41'' <: [[[[[[Int]]]]]]
//│ unified α42''
//│  α42'' = [α52''] are arg type in (α42'' -> α42'') = ([α52''] -> α53'')
//│  α42'' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]]
//│  α42'' <: [[α53'']]
//│  [[[[[[Int]]]]]] & [[[[α42'']]]] :> α40''
//│ unified α43''
//│  α43'' :> [[((Int,) -> Bool)]]
//│  α43'' <: [([(Int,)] -> α44'')]
//│ unified α44''
//│  α44'' = Bool are result type in ([(Int,)] -> α44'') = ((Int,) -> Bool)
//│ unified α45''
//│  α45'' :> [[(α42'' -> (α42'' -> α42''))]]
//│  α45'' <: [([[α40'']] -> α46'')]
//│ unified α46''
//│  α46'' <: [([α52''] -> α53'')]
//│  α46'' = (α42'' -> α42'') are result type in ([[α40'']] -> α46'') = (α42'' -> (α42'' -> α42''))
//│ unified α47''
//│  α47'' :> [[((Int,) -> Int)]]
//│  α47'' <: [([(Int,)] -> α48'')]
//│ unified α48''
//│  α48'' = Int are result type in ([(Int,)] -> α48'') = ((Int,) -> Int)
//│  α48'' = α40'' are arg type in ([(α48'',)] -> α49'') = ((α40'',) -> ((α41'',) -> α53''))
//│ unified α49''
//│  α49'' <: [([(α51'',)] -> α52'')]
//│  α49'' = ((α41'',) -> α53'') are result type in ([(α48'',)] -> α49'') = ((α40'',) -> ((α41'',) -> α53''))
//│ unified α50''
//│  α50'' :> [[((Int,) -> Int)]]
//│  α50'' <: [([(Int,)] -> α51'')]
//│ unified α51''
//│  α51'' <: [[[[α41'']]]]
//│  α51'' = Int are result type in ([(Int,)] -> α51'') = ((Int,) -> Int)
//│  [[[[[[Int]]]]]] = α51'' because α41'' <: [[[[[[Int]]]]]] and α41'' = α51'' are arg type in ((α41'',) -> α53'') = ([(α51'',)] -> α52'')
//│ unified α52''
//│  α52'' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]]
//│  α52'' <: [[[α42'']]]
//│  [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] = [α52''] because α42'' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] and α42'' = [α52''] are arg type in (α42'' -> α42'') = ([α52''] -> α53'')
//│ unified α53''
//│  [[α53'']] = [α52''] because α42'' <: [[α53'']] and α42'' = [α52''] are arg type in (α42'' -> α42'') = ([α52''] -> α53'')
//│  [[α53'']] = [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] because α42'' <: [[α53'']] and α42'' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]]
//│ unified helper54'
//│  helper54' :> [((α55',) -> ((α59',) -> α57'))]
//│  helper54' <: [([(α60',)] -> α61')]
//│  helper54' <: [([([α37'],)] -> α63')]
//│ unified α55'
//│  α55' <: [[[[α56']]]]
//│  α55' <: [[[[[[Int]]]]]]
//│  [[[[[[α55']]]]]] = α60' because α37' <: [[[[[[α55']]]]]] and [α37'] = α60' are arg type in ([([α37'],)] -> α63') = ([(α60',)] -> α61')
//│ unified α56'
//│  [[[α56']]] = α66' because α58' <: [[[α56']]] and α58' = α66' are result type in ([(α62',)] -> α58') = ([(α65',)] -> α66')
//│  α56' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]]
//│  α56' <: [[α57']]
//│  [[[[[[Int]]]]]] & [[[[α56']]]] :> α55'
//│ unified α57'
//│  α57' <: [[[α58']]]
//│  α57' <: [[[α66']]]
//│  [[α57']] = [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] because α56' <: [[α57']] and α56' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]]
//│ unified α58'
//│  α58' = α66' are result type in ([(α62',)] -> α58') = ([(α65',)] -> α66')
//│  α58' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]]
//│  α58' <: [[[α56']]]
//│  [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] = [[[α58']]] because [[α57']] = [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] because α56' <: [[α57']] and α56' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] and α57' <: [[[α58']]]
//│ unified α59'
//│  Int = [[[[α59']]]] because α65' = Int are result type in ([(Int,)] -> α65') = ((Int,) -> Int) and α65' <: [[[[α59']]]]
//│  α59' = α65' are arg type in ((α59',) -> α57') = ([(α65',)] -> α66')
//│  α59' = α62' are Tup(0) field type
//│  α59' <: [[[[[[Int]]]]]]
//│ unified α60'
//│  α60' = [[[[α56']]]] because [[[[[[α55']]]]]] = α60' because α37' <: [[[[[[α55']]]]]] and [α37'] = α60' are arg type in ([([α37'],)] -> α63') = ([(α60',)] -> α61') and α55' <: [[[[α56']]]]
//│  α60' = [[[[[[Int]]]]]] because [[[[[[α55']]]]]] = α60' because α37' <: [[[[[[α55']]]]]] and [α37'] = α60' are arg type in ([([α37'],)] -> α63') = ([(α60',)] -> α61') and α55' <: [[[[[[Int]]]]]]
//│  α60' = α55' are Tup(0) field type
//│ unified α61'
//│  α61' = [([(α65',)] -> α66')] because α63' = α61' are result type in ([([α37'],)] -> α63') = ([(α60',)] -> α61') and α63' <: [([(α65',)] -> α66')]
//│  α61' <: [([(α62',)] -> α58')]
//│  α61' = ((α59',) -> α57') are result type in ([(α60',)] -> α61') = ((α55',) -> ((α59',) -> α57'))
//│ unified α62'
//│  α62' = α65' because α59' = α62' are Tup(0) field type and α59' = α65' are arg type in ((α59',) -> α57') = ([(α65',)] -> α66')
//│  α62' :> [[[Int]]]
//│  α62' <: [[[[α59']]]]
//│  [[[[[[Int]]]]]] = α62' because α59' <: [[[[[[Int]]]]]] and α59' = α62' are Tup(0) field type
//│ unified α63'
//│  α63' <: [([(α65',)] -> α66')]
//│  α63' = ((α59',) -> α57') are result type in ([([α37'],)] -> α63') = ((α55',) -> ((α59',) -> α57'))
//│  α63' = α61' are result type in ([([α37'],)] -> α63') = ([(α60',)] -> α61')
//│ unified α64'
//│  α64' :> [[((Int,) -> Int)]]
//│  α64' <: [([(Int,)] -> α65')]
//│ unified α65'
//│  α65' <: [[[[α59']]]]
//│  α65' = Int are result type in ([(Int,)] -> α65') = ((Int,) -> Int)
//│  [[[Int]]] = α65' because α62' :> [[[Int]]] and α62' = α65' because α59' = α62' are Tup(0) field type and α59' = α65' are arg type in ((α59',) -> α57') = ([(α65',)] -> α66')
//│ unified α66'
//│  α66' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]]
//│  [[[α66']]] & [[[α58']]] :> α57'
//│  [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] = [[[α66']]] because [[α57']] = [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] because α56' <: [[α57']] and α56' :> [[[[[[[[[[[[[[Int]]]]]]]]]]]]]] and α57' <: [[[α66']]]
//│ clone: int -> int -> int

:unifyDbg
let rec l = fun a -> fun a -> l in let rec r = fun a -> r in if true then l else r
//│ unified l76'
//│  l76' :> [((α77',) -> ((α78',) -> [l76']))]
//│ unified α77'
//│ unified α78'
//│ unified r79'
//│  r79' :> [((α80',) -> [r79'])]
//│ unified α80'
//│ unified α81
//│  ((α85,) -> [l83]) = [[[α81]]] because [r87] = ((α85,) -> [l83]) are result type in ((α88,) -> [r87]) = ((α84,) -> ((α85,) -> [l83])) and r87 <: [[[α81]]]
//│  [[[[((α88,) -> [r87])]]]] = [[[α81]]] because [[r87]] = [[[[((α88,) -> [r87])]]]] because [[[[((α84,) -> ((α85,) -> [l83]))]]]] = [[r87]] because α81 :> [[[[((α84,) -> ((α85,) -> [l83]))]]]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89) and [[[[((α88,) -> [r87])]]]] = [[r87]] because α81 :> [[[[((α88,) -> [r87])]]]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89) and r87 <: [[[α81]]]
//│  α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89)
//│  α81 = ((α85,) -> [l83]) because [[l83]] = α81 are arg type in ([[l83]] -> α86) = (α81 -> (α81 -> α81)) and ((α85,) -> [l83]) = [l83] are result type in ((α84,) -> ((α85,) -> [l83])) = ((α85,) -> [l83])
//│  α81 :> [[[[((α84,) -> ((α85,) -> [l83]))]]]]
//│  α81 :> [[[[((α88,) -> [r87])]]]]
//│  α81 <: [[α89]]
//│ unified α82
//│  α82 :> [[(α81 -> (α81 -> α81))]]
//│  α82 <: [([[l83]] -> α86)]
//│ unified l83
//│  [l83] = [[[[((α88,) -> [r87])]]]] because [r87] = [l83] are result type in ((α88,) -> [r87]) = ((α85,) -> [l83]) and [[r87]] = [[[[((α88,) -> [r87])]]]] because [[[[((α84,) -> ((α85,) -> [l83]))]]]] = [[r87]] because α81 :> [[[[((α84,) -> ((α85,) -> [l83]))]]]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89) and [[[[((α88,) -> [r87])]]]] = [[r87]] because α81 :> [[[[((α88,) -> [r87])]]]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89)
//│  [l83] = [r87] are result type in ((α85,) -> [l83]) = ((α88,) -> [r87])
//│  [l83] = ((α85,) -> [l83]) are result type in ((α85,) -> [l83]) = ((α84,) -> ((α85,) -> [l83]))
//│  ((α85,) -> [l83]) = [l83] are result type in ((α84,) -> ((α85,) -> [l83])) = ((α85,) -> [l83])
//│  l83 :> [((α84,) -> ((α85,) -> [l83]))]
//│  [[l83]] = α81 are arg type in ([[l83]] -> α86) = (α81 -> (α81 -> α81))
//│ unified α84
//│  α84 = α88 because α85 = α84 are Tup(0) field type and α85 = α88 are Tup(0) field type
//│  α84 = α85 are Tup(0) field type
//│ unified α85
//│  α85 = α88 are Tup(0) field type
//│  α85 = α84 are Tup(0) field type
//│ unified α86
//│  α86 <: [([[r87]] -> α89)]
//│  α86 = (α81 -> α81) are result type in ([[l83]] -> α86) = (α81 -> (α81 -> α81))
//│ unified r87
//│  r87 <: [[[α81]]]
//│  [[[[((α88,) -> [r87])]]]] = [[r87]] because α81 :> [[[[((α88,) -> [r87])]]]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89)
//│  [[r87]] = [[[[((α88,) -> [r87])]]]] because [[[[((α84,) -> ((α85,) -> [l83]))]]]] = [[r87]] because α81 :> [[[[((α84,) -> ((α85,) -> [l83]))]]]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89) and [[[[((α88,) -> [r87])]]]] = [[r87]] because α81 :> [[[[((α88,) -> [r87])]]]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89)
//│  ((α85,) -> [l83]) = [r87] because [l83] = ((α85,) -> [l83]) are result type in ((α85,) -> [l83]) = ((α84,) -> ((α85,) -> [l83])) and [l83] = [r87] are result type in ((α85,) -> [l83]) = ((α88,) -> [r87])
//│  [[[[((α84,) -> ((α85,) -> [l83]))]]]] = [[r87]] because α81 :> [[[[((α84,) -> ((α85,) -> [l83]))]]]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89)
//│  [r87] = [l83] are result type in ((α88,) -> [r87]) = ((α85,) -> [l83])
//│  [r87] = ((α85,) -> [l83]) are result type in ((α88,) -> [r87]) = ((α84,) -> ((α85,) -> [l83]))
//│ unified α88
//│  α88 = α85 are Tup(0) field type
//│  α88 = α84 are Tup(0) field type
//│ unified α89
//│  [[α89]] = [[r87]] because α81 <: [[α89]] and α81 = [[r87]] are arg type in (α81 -> α81) = ([[r87]] -> α89)
//│  [[α89]] = ((α85,) -> [l83]) because α81 <: [[α89]] and α81 = ((α85,) -> [l83]) because [[l83]] = α81 are arg type in ([[l83]] -> α86) = (α81 -> (α81 -> α81)) and ((α85,) -> [l83]) = [l83] are result type in ((α84,) -> ((α85,) -> [l83])) = ((α85,) -> [l83])
//│  [[α89]] = [[[[((α84,) -> ((α85,) -> [l83]))]]]] because α81 <: [[α89]] and α81 :> [[[[((α84,) -> ((α85,) -> [l83]))]]]]
//│  [[α89]] = [[[[((α88,) -> [r87])]]]] because α81 <: [[α89]] and α81 :> [[[[((α88,) -> [r87])]]]]
//│ res: 'l | 'r
//│   where
//│     'r :> anything -> 'r
//│     'l :> anything -> anything -> 'l
