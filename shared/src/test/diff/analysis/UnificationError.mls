:NoJS

:unify
// 0 1

:unify
// let temp = if true then 0 else "oops" in 0

:unify
def s x = if x then x else 3
//│ ╔══[WARNING] Unification error (level 2): int<> and bool<> cannot be unified
//│ ╟── int<> flows into α26'
//│ ╟── int<> is used as argument
//│ ║  l.10: 	def s x = if x then x else 3
//│ ║        	                           ^
//│ ╟── α25' flows into α26'
//│ ╟── α26' is used as reference
//│ ║  l.10: 	def s x = if x then x else 3
//│ ║        	                    ^
//│ ╟── α25' flows into bool<>
//│ ╟── bool<> is used as reference
//│ ║  l.10: 	def s x = if x then x else 3
//│ ╙──      	             ^
//│ s: (bool & 'a) -> (int | 'a)

:ns
:unify
rec def clone x n =
  let rec helper acc n' =
    if acc <= 0 then acc else helper (acc + 1) (n' - 1) in
  helper x (n - 1)
//│ clone: 'clone
//│   where
//│     'clone :> 'a -> 'b -> 'c
//│     'b <: int
//│     'a <: 'd
//│     'd :> int
//│        <: int & 'e
//│     'e :> int
//│        <: 'f
//│     'f :> int
//│        <: 'c & 'g
//│     'g :> int
//│        <: 'e
//│     'c :> int

:ns
//let rec l = fun a -> fun a -> l in let rec r = fun a -> r in if true then l else r

