
:dp
:d
[1]
//│ Parsed: App(Var(Cons), Tup(IntLit(1), Var(Nil)))
//│ 0. Typing term Cons (1, Nil,)
//│ | 0. Typing term Cons
//│ | 0. : [((α59, list[α59],) -> list[α59])]
//│ | 0. Typing term 1, Nil,
//│ | | 0. Typing term 1
//│ | | 0. : int
//│ | | 0. Typing term Nil
//│ | | 0. : [list[α60]]
//│ | 0. : (int, [list[α60]],)
//│ | CONSTRAIN [((α59, list[α59],) -> list[α59])] <! ((int, [list[α60]],) -> α62)
//│ |   where 
//│ | C [((α59, list[α59],) -> list[α59])] <! ((int, [list[α60]],) -> α62)    (0) where ProvType <: FunctionType}
//│ | | C ((α59, list[α59],) -> list[α59]) <! ((int, [list[α60]],) -> α62)    (0) where FunctionType <: FunctionType}
//│ | | | [nested] [(int, [list[α60]],)]
//│ | | | C (int, [list[α60]],) <! (α59, list[α59],)    (1) where TupleType <: TupleType}
//│ | | | | [nested] [int]
//│ | | | | C int <! α59    (2) where TypeRef <: TypeVariable}
//│ | | | | [nested] [[list[α60]]]
//│ | | | | C [list[α60]] <! list[α59]    (3) where ProvType <: TypeRef}
//│ | | | | | C list[α60] <! list[α59]    (3) where TypeRef <: TypeRef}
//│ | | | | | | [nested] [α60]
//│ | | | | | | C α60 <! α59    (4) where TypeVariable <: TypeVariable}
//│ | | | [nested] [list[α59]]
//│ | | | C list[α59] <! α62    (5) where TypeRef <: TypeVariable}
//│ 0. : α62
//│ ⬤ Typed as: α62
//│  where: 
//│ 		α59 :> [[int]]
//│ 		α62 :> [[[list[α59]]]]
//│ res: list[int]

:d
1 :: 2 :: []
//│ 0. Typing term Cons (1, Cons (2, Nil,),)
//│ | 0. Typing term Cons
//│ | 0. : [((α65, list[α65],) -> list[α65])]
//│ | 0. Typing term 1, Cons (2, Nil,),
//│ | | 0. Typing term 1
//│ | | 0. : int
//│ | | 0. Typing term Cons (2, Nil,)
//│ | | | 0. Typing term Cons
//│ | | | 0. : [((α66, list[α66],) -> list[α66])]
//│ | | | 0. Typing term 2, Nil,
//│ | | | | 0. Typing term 2
//│ | | | | 0. : int
//│ | | | | 0. Typing term Nil
//│ | | | | 0. : [list[α67]]
//│ | | | 0. : (int, [list[α67]],)
//│ | | | CONSTRAIN [((α66, list[α66],) -> list[α66])] <! ((int, [list[α67]],) -> α69)
//│ | | |   where 
//│ | | | C [((α66, list[α66],) -> list[α66])] <! ((int, [list[α67]],) -> α69)    (0) where ProvType <: FunctionType}
//│ | | | | C ((α66, list[α66],) -> list[α66]) <! ((int, [list[α67]],) -> α69)    (0) where FunctionType <: FunctionType}
//│ | | | | | [nested] [(int, [list[α67]],)]
//│ | | | | | C (int, [list[α67]],) <! (α66, list[α66],)    (1) where TupleType <: TupleType}
//│ | | | | | | [nested] [int]
//│ | | | | | | C int <! α66    (2) where TypeRef <: TypeVariable}
//│ | | | | | | [nested] [[list[α67]]]
//│ | | | | | | C [list[α67]] <! list[α66]    (3) where ProvType <: TypeRef}
//│ | | | | | | | C list[α67] <! list[α66]    (3) where TypeRef <: TypeRef}
//│ | | | | | | | | [nested] [α67]
//│ | | | | | | | | C α67 <! α66    (4) where TypeVariable <: TypeVariable}
//│ | | | | | [nested] [list[α66]]
//│ | | | | | C list[α66] <! α69    (5) where TypeRef <: TypeVariable}
//│ | | 0. : α69
//│ | 0. : (int, α69,)
//│ | CONSTRAIN [((α65, list[α65],) -> list[α65])] <! ((int, α69,) -> α71)
//│ |   where 
//│ 		α66 :> [[int]]
//│ 		α69 :> [[[list[α66]]]]
//│ | C [((α65, list[α65],) -> list[α65])] <! ((int, α69,) -> α71)    (0) where ProvType <: FunctionType}
//│ | | C ((α65, list[α65],) -> list[α65]) <! ((int, α69,) -> α71)    (0) where FunctionType <: FunctionType}
//│ | | | [nested] [(int, α69,)]
//│ | | | C (int, α69,) <! (α65, list[α65],)    (1) where TupleType <: TupleType}
//│ | | | | [nested] [int]
//│ | | | | C int <! α65    (2) where TypeRef <: TypeVariable}
//│ | | | | [nested] [α69]
//│ | | | | C α69 <! list[α65]    (3) where TypeVariable <: TypeRef}
//│ | | | | | C [[[list[α66]]]] <! list[α65]    (4) where ProvType <: TypeRef}
//│ | | | | | | C [[list[α66]]] <! list[α65]    (4) where ProvType <: TypeRef}
//│ | | | | | | | C [list[α66]] <! list[α65]    (4) where ProvType <: TypeRef}
//│ | | | | | | | | C list[α66] <! list[α65]    (4) where TypeRef <: TypeRef}
//│ | | | | | | | | | [nested] [α66]
//│ | | | | | | | | | C α66 <! α65    (5) where TypeVariable <: TypeVariable}
//│ | | | | | | | | | | C [[int]] <! α65    (6) where ProvType <: TypeVariable}
//│ | | | | | | | | | | | C [int] <! α65    (6) where ProvType <: TypeVariable}
//│ | | | | | | | | | | | | C int <! α65    (6) where TypeRef <: TypeVariable}
//│ | | | | | | | | | | | | | Cached!
//│ | | | [nested] [list[α65]]
//│ | | | C list[α65] <! α71    (6) where TypeRef <: TypeVariable}
//│ 0. : α71
//│ ⬤ Typed as: α71
//│  where: 
//│ 		α65 :> [[int]]
//│ 		α71 :> [[[list[α65]]]]
//│ res: list[int]
