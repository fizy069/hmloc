:AllowTypeErrors

let boolToInt x = if x then "0" else 1
//│ boolToInt: bool -> (int | string)
//│ UERR 1 errors
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']



// TODO add Left definition location to pattern type
let destructEither x = match x with
 | Left l -> l + 1
 | Right r -> r && true
//│ destructEither: either[int, bool] -> (bool | int)
//│ UERR 2 errors
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']


let destructEither x = if x then
  match x with
   | Left l -> l + 1
   | Right r -> r && true
  else x
//│ destructEither: bool -> (bool | int)
//│ UERR 8 errors
//│ [bool ~ [[[[either['a86','b87']]]]], [[[[bool]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [[[[[either['a86','b87']]]]] ~ bool, α83' <: [[[[either['a86','b87']]]]], α83' <: [[[bool]]]]
//│ [bool ~ [[[[int]]]], [[[[bool]]]] <: α84', [[[[int]]]] <: α84']
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']
//│ [[[[[int]]]] ~ bool, [[[[int]]]] <: α84', α83' <: [[[α84']]], α83' <: [[[bool]]]]
//│ [int ~ [[[[either['a86','b87']]]]], [[[[int]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[[int]]] <: α85', [[[bool]]] <: α85']

let succ: int -> int
  
let test2 x = match x with
 | true -> succ x
//│ succ: int -> int
//│ test2: nothing -> int
//│ UERR 9 errors
//│ [bool ~ [[[[either['a86','b87']]]]], [[[[bool]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [[[[[either['a86','b87']]]]] ~ bool, α83' <: [[[[either['a86','b87']]]]], α83' <: [[[bool]]]]
//│ [bool ~ [[[[int]]]], [[[[bool]]]] <: α84', [[[[int]]]] <: α84']
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']
//│ [[[[int]]] ~ bool, α97' <: [[[int]]], α97' <: [[[[bool]]]]]
//│ [[[[[int]]]] ~ bool, [[[[int]]]] <: α84', α83' <: [[[α84']]], α83' <: [[[bool]]]]
//│ [int ~ [[[[either['a86','b87']]]]], [[[[int]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[[int]]] <: α85', [[[bool]]] <: α85']

let g x = (not x, (if true then x else 5))
//│ g: (bool & 'a) -> (bool, int | 'a,)
//│ UERR 11 errors
//│ [bool ~ [[[[either['a86','b87']]]]], [[[[bool]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [[[[[either['a86','b87']]]]] ~ bool, α83' <: [[[[either['a86','b87']]]]], α83' <: [[[bool]]]]
//│ [bool ~ [[[[int]]]], [[[[bool]]]] <: α84', [[[[int]]]] <: α84']
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']
//│ [[[int]] ~ bool, [[int]] <: α104', α102' <: [[[α104']]], α102' <: [[[bool]]]]
//│ [[[[int]]] ~ bool, α97' <: [[[int]]], α97' <: [[[[bool]]]]]
//│ [[[[[int]]]] ~ bool, [[[[int]]]] <: α84', α83' <: [[[α84']]], α83' <: [[[bool]]]]
//│ [bool ~ [[int]], α102' <: [[[bool]]], [[[α102']]] <: α104', [[int]] <: α104']
//│ [int ~ [[[[either['a86','b87']]]]], [[[[int]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[[int]]] <: α85', [[[bool]]] <: α85']

// Jonathan
let confluence z = if true then z else 5
let mkpair x y = (x, confluence y)
  
let conflict x = mkpair (not x) x
//│ confluence: 'a -> (int | 'a)
//│ mkpair: 'a -> 'b -> ('a, int | 'b,)
//│ conflict: (bool & 'a) -> (bool, int | 'a,)
//│ UERR 14 errors
//│ [bool ~ [[[[either['a86','b87']]]]], [[[[bool]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α131', [[[α132']]] <: α131', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [[[[[either['a86','b87']]]]] ~ bool, α83' <: [[[[either['a86','b87']]]]], α83' <: [[[bool]]]]
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']
//│ [[[[int]]] ~ bool, α97' <: [[[int]]], α97' <: [[[[bool]]]]]
//│ [bool ~ [[int]], α102' <: [[[bool]]], [[[α102']]] <: α104', [[int]] <: α104']
//│ [int ~ [[[bool]]], [[[int]]] <: α85', [[[bool]]] <: α85']
//│ [int ~ [[[bool]]], [[int]] <: α131', α130' <: [[[[[α131']]]]], [[[α130']]] <: α132', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [bool ~ [[[[int]]]], [[[[bool]]]] <: α84', [[[[int]]]] <: α84']
//│ [[[int]] ~ bool, [[int]] <: α104', α102' <: [[[α104']]], α102' <: [[[bool]]]]
//│ [bool ~ [[int]], α128' <: [[[bool]]], [[[α128']]] <: α130', [[[α128']]] <: α130', α128' <: [[[[[[[α131']]]]]]], [[int]] <: α131']
//│ [[[[[int]]]] ~ bool, [[[[int]]]] <: α84', α83' <: [[[α84']]], α83' <: [[[bool]]]]
//│ [int ~ [[[[either['a86','b87']]]]], [[[[int]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]

let test =
  let f x = x in
  (f 1, f true)
//│ test: (bool | int, bool | int,)
//│ UERR 15 errors
//│ [bool ~ [[[[either['a86','b87']]]]], [[[[bool]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α131', [[[α132']]] <: α131', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [[[[[either['a86','b87']]]]] ~ bool, α83' <: [[[[either['a86','b87']]]]], α83' <: [[[bool]]]]
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']
//│ [[[[int]]] ~ bool, α97' <: [[[int]]], α97' <: [[[[bool]]]]]
//│ [bool ~ [[int]], α102' <: [[[bool]]], [[[α102']]] <: α104', [[int]] <: α104']
//│ [int ~ [[[bool]]], [[[int]]] <: α85', [[[bool]]] <: α85']
//│ [int ~ [[[bool]]], [[int]] <: α131', α130' <: [[[[[α131']]]]], [[[α130']]] <: α132', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [bool ~ [[[[int]]]], [[[[bool]]]] <: α84', [[[[int]]]] <: α84']
//│ [[[int]] ~ bool, [[int]] <: α104', α102' <: [[[α104']]], α102' <: [[[bool]]]]
//│ [bool ~ [[int]], α128' <: [[[bool]]], [[[α128']]] <: α130', [[[α128']]] <: α130', α128' <: [[[[[[[α131']]]]]]], [[int]] <: α131']
//│ [[[[[int]]]] ~ bool, [[[[int]]]] <: α84', α83' <: [[[α84']]], α83' <: [[[bool]]]]
//│ [int ~ [[[[either['a86','b87']]]]], [[[[int]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α143', [[[bool]]] <: α143']



let wrap x = x :: []
let rec t = wrap (if true then 1 else t)
//│ wrap: 'a -> list['a]
//│ t: 't
//│   where
//│     't :> list[int | 't]
//│ UERR 19 errors
//│ [bool ~ [[[[either['a86','b87']]]]], [[[[bool]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α131', [[[α132']]] <: α131', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [[[[[either['a86','b87']]]]] ~ bool, α83' <: [[[[either['a86','b87']]]]], α83' <: [[[bool]]]]
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']
//│ [[[[int]]] ~ bool, α97' <: [[[int]]], α97' <: [[[[bool]]]]]
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', [[[t156']]] <: α160', [[[[list['a158']]]]] <: t156']
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', t156' <: [[[α160']]], [[[[t156']]]] <: α157', [[[[t156']]]] <: α157', [[[[list['a158']]]]] <: t156']
//│ [int ~ [[[[list['a158']]]]], [[[int]]] <: α157', t156' <: [[[[α157']]]], t156' <: [[[α160']]], [[[t156']]] <: α160', [[[[list['a158']]]]] <: t156']
//│ [bool ~ [[int]], α102' <: [[[bool]]], [[[α102']]] <: α104', [[int]] <: α104']
//│ [int ~ [[[bool]]], [[[int]]] <: α85', [[[bool]]] <: α85']
//│ [int ~ [[[bool]]], [[int]] <: α131', α130' <: [[[[[α131']]]]], [[[α130']]] <: α132', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', t156' <: [[[α160']]], [[[[[[t156']]]]]] <: 'a158', [[[α157']]] <: 'a158', [[[[t156']]]] <: α157', [[[[list['a158']]]]] <: t156']
//│ [bool ~ [[[[int]]]], [[[[bool]]]] <: α84', [[[[int]]]] <: α84']
//│ [[[int]] ~ bool, [[int]] <: α104', α102' <: [[[α104']]], α102' <: [[[bool]]]]
//│ [bool ~ [[int]], α128' <: [[[bool]]], [[[α128']]] <: α130', [[[α128']]] <: α130', α128' <: [[[[[[[α131']]]]]]], [[int]] <: α131']
//│ [[[[[int]]]] ~ bool, [[[[int]]]] <: α84', α83' <: [[[α84']]], α83' <: [[[bool]]]]
//│ [int ~ [[[[either['a86','b87']]]]], [[[[int]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α143', [[[bool]]] <: α143']

let rec length ls = match ls with | hd :: tl -> 1 + length tl | [] -> 0
let weird x = (x + 1, length x)
//│ length: list[?] -> int
//│ weird: nothing -> (int, int,)
//│ UERR 21 errors
//│ [bool ~ [[[[either['a86','b87']]]]], [[[[bool]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α131', [[[α132']]] <: α131', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [[[[[either['a86','b87']]]]] ~ bool, α83' <: [[[[either['a86','b87']]]]], α83' <: [[[bool]]]]
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']
//│ [[[[int]]] ~ bool, α97' <: [[[int]]], α97' <: [[[[bool]]]]]
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', [[[t156']]] <: α160', [[[[list['a158']]]]] <: t156']
//│ [list['a187'] ~ [[[int]]], [[[[list['a187']]]]] <: α186', [[[[α182']]]] <: α186', α182' <: [[[int]]]]
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', t156' <: [[[α160']]], [[[[t156']]]] <: α157', [[[[t156']]]] <: α157', [[[[list['a158']]]]] <: t156']
//│ [int ~ [[[[list['a158']]]]], [[[int]]] <: α157', t156' <: [[[[α157']]]], t156' <: [[[α160']]], [[[t156']]] <: α160', [[[[list['a158']]]]] <: t156']
//│ [bool ~ [[int]], α102' <: [[[bool]]], [[[α102']]] <: α104', [[int]] <: α104']
//│ [int ~ [[[bool]]], [[[int]]] <: α85', [[[bool]]] <: α85']
//│ [int ~ [[[bool]]], [[int]] <: α131', α130' <: [[[[[α131']]]]], [[[α130']]] <: α132', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', t156' <: [[[α160']]], [[[[[[t156']]]]]] <: 'a158', [[[α157']]] <: 'a158', [[[[t156']]]] <: α157', [[[[list['a158']]]]] <: t156']
//│ [bool ~ [[[[int]]]], [[[[bool]]]] <: α84', [[[[int]]]] <: α84']
//│ [[[int]] ~ bool, [[int]] <: α104', α102' <: [[[α104']]], α102' <: [[[bool]]]]
//│ [bool ~ [[int]], α128' <: [[[bool]]], [[[α128']]] <: α130', [[[α128']]] <: α130', α128' <: [[[[[[[α131']]]]]]], [[int]] <: α131']
//│ [[[[[int]]]] ~ bool, [[[[int]]]] <: α84', α83' <: [[[α84']]], α83' <: [[[bool]]]]
//│ [[[[int]]] ~ list['a187'], α182' <: [[[int]]], [[α182'] - ([α182'] -> α191') ~ ([list['a187']] -> α189') - [list['a187']], length185' <: [[[([α182'] -> α191')]]], length185' <: [[[([list['a187']] -> α189')]]]]]
//│ [int ~ [[[[either['a86','b87']]]]], [[[[int]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α143', [[[bool]]] <: α143']


let len ls = match ls with | "hd :: tl" -> 1 | [] -> 0
//│ len: nothing -> int
//│ UERR 22 errors
//│ [bool ~ [[[[either['a86','b87']]]]], [[[[bool]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α131', [[[α132']]] <: α131', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [[[[[either['a86','b87']]]]] ~ bool, α83' <: [[[[either['a86','b87']]]]], α83' <: [[[bool]]]]
//│ [int ~ [[[bool]]], [[[int]]] <: α72', [[[bool]]] <: α72']
//│ [string ~ [[int]], [[string]] <: α68', [[int]] <: α68']
//│ [[[[int]]] ~ bool, α97' <: [[[int]]], α97' <: [[[[bool]]]]]
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', [[[t156']]] <: α160', [[[[list['a158']]]]] <: t156']
//│ [list['a187'] ~ [[[int]]], [[[[list['a187']]]]] <: α186', [[[[α182']]]] <: α186', α182' <: [[[int]]]]
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', t156' <: [[[α160']]], [[[[t156']]]] <: α157', [[[[t156']]]] <: α157', [[[[list['a158']]]]] <: t156']
//│ [int ~ [[[[list['a158']]]]], [[[int]]] <: α157', t156' <: [[[[α157']]]], t156' <: [[[α160']]], [[[t156']]] <: α160', [[[[list['a158']]]]] <: t156']
//│ [bool ~ [[int]], α102' <: [[[bool]]], [[[α102']]] <: α104', [[int]] <: α104']
//│ [int ~ [[[bool]]], [[[int]]] <: α85', [[[bool]]] <: α85']
//│ [int ~ [[[bool]]], [[int]] <: α131', α130' <: [[[[[α131']]]]], [[[α130']]] <: α132', [[[α130']]] <: α132', [[[α128']]] <: α130', α128' <: [[[bool]]]]
//│ [int ~ [[[[list['a158']]]]], [[int]] <: α160', t156' <: [[[α160']]], [[[[[[t156']]]]]] <: 'a158', [[[α157']]] <: 'a158', [[[[t156']]]] <: α157', [[[[list['a158']]]]] <: t156']
//│ [bool ~ [[[[int]]]], [[[[bool]]]] <: α84', [[[[int]]]] <: α84']
//│ [[[int]] ~ bool, [[int]] <: α104', α102' <: [[[α104']]], α102' <: [[[bool]]]]
//│ [bool ~ [[int]], α128' <: [[[bool]]], [[[α128']]] <: α130', [[[α128']]] <: α130', α128' <: [[[[[[[α131']]]]]]], [[int]] <: α131']
//│ [[[[[list['a199']]]]] ~ string, α197' <: [[[[list['a199']]]]], α197' <: [[[string]]]]
//│ [[[[[int]]]] ~ bool, [[[[int]]]] <: α84', α83' <: [[[α84']]], α83' <: [[[bool]]]]
//│ [[[[int]]] ~ list['a187'], α182' <: [[[int]]], [[α182'] - ([α182'] -> α191') ~ ([list['a187']] -> α189') - [list['a187']], length185' <: [[[([α182'] -> α191')]]], length185' <: [[[([list['a187']] -> α189')]]]]]
//│ [int ~ [[[[either['a86','b87']]]]], [[[[int]]]] <: α84', [[[α83']]] <: α84', α83' <: [[[[either['a86','b87']]]]]]
//│ [int ~ [[[bool]]], [[int]] <: α143', [[[bool]]] <: α143']
