:NoJS
:OcamlParser
:OcamlLoadLibrary


type Bool = True | False
//│ Defined type alias Bool
//│ Defined class True
//│ Defined class False
//│ True: Bool
//│ False: Bool

:unifyDbg
let test x =
  match x with True -> 0 | False -> 1
//│ unified α58'
//│  α58' <: [[((true<> & α59') | ((false<> & α60') & ~(true<>)))]]
//│ unified α59'
//│ unified α60'
//│ unified α61'
//│  α61' :> int<>
//│ test: bool -> int

:unifyDbg
let test x =
  match x with True -> 0 | False -> "oops"
//│ [ERROR 1] int<> != string<> unifying because int<> | string<> <: α69'
//│ unified α66'
//│  α66' <: [[((true<> & α67') | ((false<> & α68') & ~(true<>)))]]
//│ unified α67'
//│ unified α68'
//│ unified α69'
//│  α69' :> string<>
//│  α69' :> int<>
//│ test: bool -> (int | string)



:unifyDbg
let temp x = if x then 0 else "oops"
//│ [ERROR 1] int<> != string<> unifying because int<> | string<> <: α77'
//│ unified α74'
//│  α74' <: [[((true<bool> & α75') | (α76' & ~(true<bool>)))]]
//│ unified α75'
//│ unified α76'
//│ unified α77'
//│  α77' :> string<>
//│  α77' :> int<>
//│ temp: anything -> (int | string)


let temp x y z = if x then y else z
//│ temp: anything -> 'a -> 'a -> 'a

temp true 1 2
//│ res: int

:unifyDbg
temp true 1 "oops"
//│ [ERROR 0] ((true<bool> & α107) | (α108 & ~(true<bool>))) != true<bool> unifying because [[((true<bool> & α107) | (α108 & ~(true<bool>)))]] = true<bool> because α106 <: [[((true<bool> & α107) | (α108 & ~(true<bool>)))]] and α106 :> [[[[[[true<bool>]]]]]]
//│ [ERROR 1] int<> != string<> unifying because int<> = string<> because [[[[[α114]]]]] = int<> because α109 <: [[[[[α114]]]]] and α109 :> [[[[int<>]]]] and [[[[[α114]]]]] = string<> because α110 <: [[[[[α114]]]]] and α110 :> [[[[string<>]]]]
//│ [ERROR 1] string<> != int<> unifying because [[[[string<>]]]] = int<> because α110 :> [[[[string<>]]]] and [[[[int<>]]]] = α110 because α109 :> [[[[int<>]]]] and [α109] | α110 <: α111
//│ unified α106
//│  α106 :> [[[[[[true<bool>]]]]]]
//│  α106 <: [[((true<bool> & α107) | (α108 & ~(true<bool>)))]]
//│ unified α107
//│  α107 :> [[[[[[[[[true<bool>]]]]]]]]]
//│ unified α108
//│ unified α109
//│  [α109] | α110 <: α111
//│  int<> = α109 because [[[[[α114]]]]] = int<> because α109 <: [[[[[α114]]]]] and α109 :> [[[[int<>]]]] and [[[α114]]] = α109 because α111 <: [[[α114]]] and α111 :> [α109]
//│  string<> = α109 because [[[[[α114]]]]] = string<> because α110 <: [[[[[α114]]]]] and α110 :> [[[[string<>]]]] and [[[α114]]] = α109 because α111 <: [[[α114]]] and α111 :> [α109]
//│  α109 :> [[[[int<>]]]]
//│  α109 <: [[[[[α114]]]]]
//│ unified α110
//│  string<> = α110 because [[[[[α114]]]]] = string<> because α110 <: [[[[[α114]]]]] and α110 :> [[[[string<>]]]] and [[[[[α114]]]]] = α110 because α109 <: [[[[[α114]]]]] and [α109] | α110 <: α111
//│  [[[[int<>]]]] = α110 because α109 :> [[[[int<>]]]] and [α109] | α110 <: α111
//│  α110 :> [[[[string<>]]]]
//│  α110 <: [[[[[α114]]]]]
//│ unified α111
//│  α111 :> [α110]
//│  α111 :> [α109]
//│  α111 <: [[[α114]]]
//│ unified α112
//│  α112 :> [[[(α109 -> (α110 -> α111))]]]
//│  α112 <: [([(int<>,)] -> α113)]
//│ unified α113
//│  α113 <: [([(string<>,)] -> α114)]
//│  α113 = (α110 -> α111) are result type in ([(int<>,)] -> α113) = (α109 -> (α110 -> α111))
//│ unified α114
//│  [[[[[α114]]]]] = α110 because α109 <: [[[[[α114]]]]] and [α109] | α110 <: α111
//│  [[[α114]]] = α109 because α111 <: [[[α114]]] and α111 :> [α109]
//│  [[[[[α114]]]]] = string<> because α110 <: [[[[[α114]]]]] and α110 :> [[[[string<>]]]]
//│  [[[[[α114]]]]] = int<> because α109 <: [[[[[α114]]]]] and α109 :> [[[[int<>]]]]
//│ res: int | string


let temp x y = if x then x else y
//│ temp: (true & 'a | ~true) -> 'a -> 'a

:unifyDbg
temp true 1
//│ [ERROR 0] ((true<bool> & α129) | (α130 & ~(true<bool>))) != true<bool> unifying because [[((true<bool> & α129) | (α130 & ~(true<bool>)))]] = true<bool> because α128 <: [[((true<bool> & α129) | (α130 & ~(true<bool>)))]] and α128 :> [[[[[[true<bool>]]]]]]
//│ [ERROR 1] true<bool> != int<> unifying because true<bool> = int<> because [[[[[α134]]]]] = true<bool> because α129 <: [[[[[α134]]]]] and α129 :> [[[[[[[[[true<bool>]]]]]]]]] and [[[[[α134]]]]] = int<> because α131 <: [[[[[α134]]]]] and α131 :> [[[[int<>]]]]
//│ [ERROR 1] int<> != true<bool> unifying because [[[[int<>]]]] = true<bool> because α131 :> [[[[int<>]]]] and [[[[[[[[[true<bool>]]]]]]]]] = α131 because α129 :> [[[[[[[[[true<bool>]]]]]]]]] and [α129] | α131 <: α132
//│ unified α128
//│  α128 :> [[[[[[true<bool>]]]]]]
//│  α128 <: [[((true<bool> & α129) | (α130 & ~(true<bool>)))]]
//│ unified α129
//│  α129 = α132 because [[[α134]]] = α129 because α132 <: [[[α134]]] and α132 :> [α129] and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132)
//│  [α129] = int<> because α132 :> [α129] and [[[[int<>]]]] = α132 because α131 :> [[[[int<>]]]] and α131 = α132 because [[[[[α134]]]]] = α131 because α129 <: [[[[[α134]]]]] and [α129] | α131 <: α132 and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132)
//│  [α129] | α131 <: α132
//│  true<bool> = α129 because [[[[[α134]]]]] = true<bool> because α129 <: [[[[[α134]]]]] and α129 :> [[[[[[[[[true<bool>]]]]]]]]] and [[[α134]]] = α129 because α132 <: [[[α134]]] and α132 :> [α129]
//│  int<> = α129 because [[[[[α134]]]]] = int<> because α131 <: [[[[[α134]]]]] and α131 :> [[[[int<>]]]] and [[[α134]]] = α129 because α132 <: [[[α134]]] and α132 :> [α129]
//│  α129 :> [[[[[[[[[true<bool>]]]]]]]]]
//│  α129 <: [[[[[α134]]]]]
//│ unified α130
//│ unified α131
//│  [α131] = true<bool> because α132 :> [α131] and α132 = true<bool> because [[[[int<>]]]] = α132 because α131 :> [[[[int<>]]]] and α131 = α132 because [[[[[α134]]]]] = α131 because α129 <: [[[[[α134]]]]] and [α129] | α131 <: α132 and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132) and [[[[[[[[[true<bool>]]]]]]]]] = α132 because α129 :> [[[[[[[[[true<bool>]]]]]]]]] and α129 = α132 because [[[α134]]] = α129 because α132 <: [[[α134]]] and α132 :> [α129] and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132)
//│  α131 = α132 because [[[[[α134]]]]] = α131 because α129 <: [[[[[α134]]]]] and [α129] | α131 <: α132 and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132)
//│  int<> = α131 because [[[[[α134]]]]] = int<> because α131 <: [[[[[α134]]]]] and α131 :> [[[[int<>]]]] and [[[[[α134]]]]] = α131 because α129 <: [[[[[α134]]]]] and [α129] | α131 <: α132
//│  [[[[[[[[[true<bool>]]]]]]]]] = α131 because α129 :> [[[[[[[[[true<bool>]]]]]]]]] and [α129] | α131 <: α132
//│  α131 :> [[[[int<>]]]]
//│  α131 <: [[[[[α134]]]]]
//│ unified α132
//│  [[[[[[[[[true<bool>]]]]]]]]] = α132 because α129 :> [[[[[[[[[true<bool>]]]]]]]]] and α129 = α132 because [[[α134]]] = α129 because α132 <: [[[α134]]] and α132 :> [α129] and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132)
//│  α132 = true<bool> because [[[[int<>]]]] = α132 because α131 :> [[[[int<>]]]] and α131 = α132 because [[[[[α134]]]]] = α131 because α129 <: [[[[[α134]]]]] and [α129] | α131 <: α132 and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132) and [[[[[[[[[true<bool>]]]]]]]]] = α132 because α129 :> [[[[[[[[[true<bool>]]]]]]]]] and α129 = α132 because [[[α134]]] = α129 because α132 <: [[[α134]]] and α132 :> [α129] and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132)
//│  [[[[int<>]]]] = α132 because α131 :> [[[[int<>]]]] and α131 = α132 because [[[[[α134]]]]] = α131 because α129 <: [[[[[α134]]]]] and [α129] | α131 <: α132 and α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132)
//│  α132 :> [α131]
//│  α132 :> [α129]
//│  α132 <: [[[α134]]]
//│ unified α133
//│  α133 :> [[[(α131 -> α132)]]]
//│  α133 <: [([(int<>,)] -> α134)]
//│ unified α134
//│  α134 = α132 are result type in ([(int<>,)] -> α134) = (α131 -> α132)
//│  [[[[[α134]]]]] = α131 because α129 <: [[[[[α134]]]]] and [α129] | α131 <: α132
//│  [[[α134]]] = α129 because α132 <: [[[α134]]] and α132 :> [α129]
//│  [[[[[α134]]]]] = int<> because α131 <: [[[[[α134]]]]] and α131 :> [[[[int<>]]]]
//│  [[[[[α134]]]]] = true<bool> because α129 <: [[[[[α134]]]]] and α129 :> [[[[[[[[[true<bool>]]]]]]]]]
//│ res: int | true


