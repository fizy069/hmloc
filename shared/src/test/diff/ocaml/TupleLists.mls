

let f = if true then [0, 1] else [0], [1]
//│ [ERROR] Type `_ list` does not match `_ list * _ list`
//│ 
//│         (_ list) ---> (?a) <--- (_ list * _ list)
//│ 
//│ ◉ (_ list) is here
//│ │  - l.1  let f = if true then [0, 1] else [0], [1]
//│ │                              ^^^^^^
//│ │  - l.1  let f = if true then [0, 1] else [0], [1]
//│ │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ▼ 
//│ ◉ (?a) is assumed here
//│ ▲  - l.1  let f = if true then [0, 1] else [0], [1]
//│ │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ │ 
//│ ◉ (_ list * _ list) is here
//│    - l.1  let f = if true then [0, 1] else [0], [1]
//│                                            ^^^^^^^^
//│ f: (list[int], list[int],) | list[(int, int,)]
//│ U max: 11, total: 25
//│ UERR 1 errors
//│ L: 0 [list['a68'] ~ ([list['a71']], [list['a74']],), list['a68'] <: α67', α67' :> ([list['a71']], [list['a74']],)]

let f x = if true then [0, 1] else x, [1]
//│ [ERROR] Type `_ list` does not match `_ * _ list`
//│ 
//│         (_ list) ---> (?a) <--- (_ * _ list)
//│ 
//│ ◉ (_ list) is here
//│ │  - l.1  let f x = if true then [0, 1] else x, [1]
//│ │                                ^^^^^^
//│ │  - l.1  let f x = if true then [0, 1] else x, [1]
//│ │                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ▼ 
//│ ◉ (?a) is assumed here
//│ ▲  - l.1  let f x = if true then [0, 1] else x, [1]
//│ │                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ │ 
//│ ◉ (_ * _ list) is here
//│    - l.1  let f x = if true then [0, 1] else x, [1]
//│                                              ^^^^^^
//│ f: 'a -> (('a, list[int],) | list[(int, int,)])
//│ U max: 9, total: 20
//│ UERR 1 errors
//│ L: 0 [list['a86'] ~ ([α84'], [list['a89']],), list['a86'] <: α85', α85' :> ([α84'], [list['a89']],)]

let test: (int * int) list
//│ test: list[(int, int,)]

let f x = if true then test else x, [1]
//│ [ERROR] Type `(int * int) list` does not match `_ * _ list`
//│ 
//│         ((int * int) list) ---> (?a) <--- (_ * _ list)
//│ 
//│ ◉ ((int * int) list) is here
//│ │  - l.-2 let test: (int * int) list
//│ │                    ^^^^^^^^^^^^^^^
//│ │  - l.1  let f x = if true then test else x, [1]
//│ │                                ^^^^
//│ │  - l.1  let f x = if true then test else x, [1]
//│ │                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ▼ 
//│ ◉ (?a) is assumed here
//│ ▲  - l.1  let f x = if true then test else x, [1]
//│ │                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ │ 
//│ ◉ (_ * _ list) is here
//│    - l.1  let f x = if true then test else x, [1]
//│                                            ^^^^^^
//│ f: 'a -> (('a, list[int],) | list[(int, int,)])
//│ U max: 6, total: 15
//│ UERR 1 errors
//│ L: 0 [list[(int, int,)] ~ ([α100'], [list['a102']],), list[(int, int,)] <: α101', α101' :> ([α100'], [list['a102']],)]

