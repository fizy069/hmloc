

let f = if true then [0, 1] else [0], [1]
//│ f: (list[int], list[int],) | list[(int, int,)]
//│ UERR 1 errors
//│ [list['a68'] ~ [[([list['a71']], [list['a74']],)]], [[[list['a68']]]] <: α67', [[([list['a71']], [list['a74']],)]] <: α67']

let f x = if true then [0, 1] else x, [1]
//│ f: 'a -> (('a, list[int],) | list[(int, int,)])
//│ UERR 2 errors
//│ [list['a86'] ~ [[([α84'], [list['a89']],)]], [[[list['a86']]]] <: α85', [[([α84'], [list['a89']],)]] <: α85']
//│ [list['a68'] ~ [[([list['a71']], [list['a74']],)]], [[[list['a68']]]] <: α67', [[([list['a71']], [list['a74']],)]] <: α67']

let test: (int * int) list
//│ test: list[(int, int,)]
//│ UERR 2 errors
//│ [list['a86'] ~ [[([α84'], [list['a89']],)]], [[[list['a86']]]] <: α85', [[([α84'], [list['a89']],)]] <: α85']
//│ [list['a68'] ~ [[([list['a71']], [list['a74']],)]], [[[list['a68']]]] <: α67', [[([list['a71']], [list['a74']],)]] <: α67']

let f x = if true then test else x, [1]
//│ f: 'a -> (('a, list[int],) | list[(int, int,)])
//│ UERR 3 errors
//│ [list['a86'] ~ [[([α84'], [list['a89']],)]], [[[list['a86']]]] <: α85', [[([α84'], [list['a89']],)]] <: α85']
//│ [list['a68'] ~ [[([list['a71']], [list['a74']],)]], [[[list['a68']]]] <: α67', [[([list['a71']], [list['a74']],)]] <: α67']
//│ [list[(int, int,)] ~ [[([α100'], [list['a102']],)]], [[[list[(int, int,)]]]] <: α101', [[([α100'], [list['a102']],)]] <: α101']

