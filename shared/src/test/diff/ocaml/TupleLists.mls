

let f = if true then [0, 1] else [0], [1]
//│ [ERROR] Type `_ list * _ list` does not match `_ list`
//│ 
//│         (_ list * _ list) ---> (?a) <--- (_ list)
//│ 
//│ ◉ (_ list * _ list) is here
//│ │  - l.1  let f = if true then [0, 1] else [0], [1]
//│ │                                          ^^^^^^^^
//│ │  - l.1  let f = if true then [0, 1] else [0], [1]
//│ │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ▼ 
//│ ◉ (?a) is assumed here
//│ ▲  - l.1  let f = if true then [0, 1] else [0], [1]
//│ │                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ │ 
//│ ◉ (_ list) is here
//│    - l.1  let f = if true then [0, 1] else [0], [1]
//│                                ^^^^^^
//│ f: (list[?], list[?],) | list[(int, int,)]
//│ f: 'a
//│   where
//│     'a = (list[int], list[int],), list[(int, int,)]
//│ U max: 2, total: 16
//│ UERR 1 errors
//│ L: 0 [([[list['a71']]], [[list['a74']]],) ~ list['a68'], ([[list['a71']]], [[list['a74']]],) <: α67', α67' :> list['a68']]

let f x = if true then [0, 1] else x, [1]
//│ [ERROR] Type `_ * _ list` does not match `_ list`
//│ 
//│         (_ * _ list) ---> (?a) <--- (_ list)
//│ 
//│ ◉ (_ * _ list) is here
//│ │  - l.1  let f x = if true then [0, 1] else x, [1]
//│ │                                            ^^^^^^
//│ │  - l.1  let f x = if true then [0, 1] else x, [1]
//│ │                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ▼ 
//│ ◉ (?a) is assumed here
//│ ▲  - l.1  let f x = if true then [0, 1] else x, [1]
//│ │                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ │ 
//│ ◉ (_ list) is here
//│    - l.1  let f x = if true then [0, 1] else x, [1]
//│                                  ^^^^^^
//│ f: 'a -> (('a, list[?],) | list[(int, int,)])
//│ f: 'a -> 'b
//│   where
//│     'b = ('a, list[int],), list[(int, int,)]
//│ U max: 2, total: 12
//│ UERR 1 errors
//│ L: 0 [([[α87']], [[list['a92']]],) ~ list['a89'], ([[α87']], [[list['a92']]],) <: α88', α88' :> list['a89']]

let test: (int * int) list
//│ test: list[(int, int,)]
//│ test: list[(int, int,)]

let f x = if true then test else x, [1]
//│ [ERROR] Type `_ * _ list` does not match `(int * int) list`
//│ 
//│         (_ * _ list) ---> (?a) <--- ((int * int) list)
//│ 
//│ ◉ (_ * _ list) is here
//│ │  - l.1  let f x = if true then test else x, [1]
//│ │                                          ^^^^^^
//│ │  - l.1  let f x = if true then test else x, [1]
//│ │                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ▼ 
//│ ◉ (?a) is assumed here
//│ ▲  - l.1  let f x = if true then test else x, [1]
//│ │                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ │  - l.1  let f x = if true then test else x, [1]
//│ │                                ^^^^
//│ │ 
//│ ◉ ((int * int) list) is here
//│    - l.-3 let test: (int * int) list
//│                      ^^^^^^^^^^^^^^^
//│ f: 'a -> (('a, list[?],) | list[(int, int,)])
//│ f: 'a -> 'b
//│   where
//│     'b = ('a, list[int],), list[(int, int,)]
//│ U max: 2, total: 8
//│ UERR 1 errors
//│ L: 0 [([[α105']], [[list['a107']]],) ~ list[([int], [int],)], ([[α105']], [[list['a107']]],) <: α106', α106' :> list[([int], [int],)]]

