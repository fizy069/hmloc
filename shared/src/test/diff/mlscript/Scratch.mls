// class Nil: {}
// class Cons[A]: {_0: A; _1: List[A]}
// type List[A] = Cons[A] | Nil
// def Nil = Nil {}
// def Cons a b = Cons {_0 = a; _1 = b}

// :d
// def head xs = case xs of
//   { Nil -> error // hi
//   | Cons -> xs._0
//   }

def a = 1 // hi
//│ a: 1
//│  = [Function: a]
