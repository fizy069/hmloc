// https://github.com/hkust-taco/mlscript/issues/56


def test3 x = case x of
  { 1 -> true
  | true -> true
  | _ -> false
  }
//│ test3: anything -> bool

:ns
test3
//│ res: 'a -> 'b
//│   where
//│     'b :> bool
//│     'a <: 1 & 'c | (true & 'd | 'e & ~true) & ~1


def test3 x = case x of
  { 1 -> x
  | true -> true
  | _ -> false
  }
//│ test3: (1 & 'a | ~1) -> (bool | 'a)


def ty_1: (1 & 'a | true | ~1 & ~true) -> (false | true | 'a)
//│ ty_1: (1 & 'a | true | ~1 & ~true) -> ('a | false | true)

ty_1 = test3
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.30: 	ty_1 = test3
//│ ║        	^^^^^^^^^^^^
//│ ╟── reference of type `bool` does not match type `false | true | 'a`
//│ ║  l.21: 	  | true -> true
//│ ║        	            ^^^^
//│ ╟── Note: constraint arises from union type:
//│ ║  l.27: 	def ty_1: (1 & 'a | true | ~1 & ~true) -> (false | true | 'a)
//│ ╙──      	                                          ^^^^^^^^^^^^^^^^^^^
//│ (1 & 'a | ~1) -> (bool | 'a)
//│   <:  ty_1:
//│ (1 & 'a | true | ~1 & ~true) -> ('a | false | true)

def ty_2: (1 & 'a | ~1) -> (false | true | 'a)
//│ ty_2: (1 & 'a | ~1) -> ('a | false | true)

ty_2 = ty_1
//│ (1 & 'a | true | ~1 & ~true) -> ('a | false | true)
//│   <:  ty_2:
//│ (1 & 'a | ~1) -> ('a | false | true)


// * Note: it is a bit counter-intuitive that we have:
// *    (1 & 'a | ~1)  <:  (1 & 'a | true | ~1 & ~true)
// *  and in particular:
// *    ~1  <:  (1 & 'a | true | ~1 & ~true)
// *  but the latter can be understood by seeing that it's equivalent (by swapping) to:
// *    (1 | true)  <:  (1 & 'a | true | 1)
// *  ie
// *    (1 | true)  <:  (true | 1)

