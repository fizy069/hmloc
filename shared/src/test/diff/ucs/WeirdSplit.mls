:NewParser

class A()
class B()
//│ Defined class A
//│ Defined class B
//│ A: () -> A
//│ B: () -> B

fun f(x) =
  if x
    is
      A then 0
      B then 1
//│ f: (A | B) -> int

// Precedence problem: should we restruct terms when push them to the stack?
:e
fun f(x) =
  if x ==
    1
      + 2 then 0
      + _ then 1
//│ ╔══[ERROR] Type mismatch in operator application:
//│ ║  l.20: 	  if x ==
//│ ║        	     ^^^^
//│ ║  l.21: 	    1
//│ ║        	^^^^^^
//│ ║  l.22: 	      + 2 then 0
//│ ║        	^^^^^^^
//│ ╟── operator application of type `bool` is not an instance of type `int`
//│ ║  l.20: 	  if x ==
//│ ║        	     ^^^^
//│ ║  l.21: 	    1
//│ ╙──      	^^^^^^
//│ f: int -> int

fun f(x, s, t) =
  if x
    is A()
      and t then 0
      and s then 0
    is _ then 1
//│ f: (anything, anything, anything,) -> int
